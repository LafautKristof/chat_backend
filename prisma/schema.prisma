generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String                    @id @default(uuid())
  email         String?                   @unique
  name          String?
  image         String?
  createdAt     DateTime                  @default(now())
  updatedAt     DateTime                  @updatedAt
  password      String?
  accounts      Account[]
  conversations ConversationParticipant[]
  messages      Message[]
}

model Account {
  id                String  @id @default(uuid())
  provider          String
  providerAccountId String
  type              String?
  access_token      String?
  refresh_token     String?
  expires_at        Int?
  userId            String
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Message {
  id             String       @id @default(uuid())
  content        String
  createdAt      DateTime     @default(now())
  senderId       String?
  conversationId String
  type           String       @default("text")
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  sender         User?        @relation(fields: [senderId], references: [id])
}

model Conversation {
  id           String                    @id @default(uuid())
  createdAt    DateTime                  @default(now())
  updatedAt    DateTime                  @updatedAt
  isGroup      Boolean                   @default(false)
  title        String?
  background   String?
  participants ConversationParticipant[]
  messages     Message[]
}

model ConversationParticipant {
  id             String       @id @default(uuid())
  userId         String
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  user           User         @relation(fields: [userId], references: [id])

  @@unique([userId, conversationId])
}
